// Default options
$defaultDuration: 0.3s;
$primaryColour: #ececec;
$secondaryColour: #666;
$shadowColour: rgba(0, 0, 0, 0.6);

// As is often the case, some devices/browsers need additional code to get CSS to work
// in the most desired way. These mixins are used to quickly drop in hacks for each element
@mixin hideTapHighlightColor() {
  //Prevent highlight colour when element is tapped
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

@mixin hardwareAccel() {
  //Improve performance on mobile/tablet devices
  transform: translateZ(0);
}

@mixin improveAntiAlias() {
  //Improve aliasing on mobile/tablet devices
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

.ant-steps-item-process .ant-steps-item-icon {
  background: #50a3f0 !important;
}

.ant-steps-item-finish .ant-steps-item-icon {
  background: #50a3f0 !important;
  line-height: 26px;
}

.ant-steps-item-finish .ant-steps-item-icon > .ant-steps-icon {
  color: #fff;
}

.score_container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
  padding: 0 !important;
  margin-right: 2rem;
  span {
    font-size: 55px;
    font-weight: 700;
    color: #50a3f0;
    padding-right: 1rem;
  }
}

.question_heading {
  font-size: 35px;
  font-weight: 600;
}

.steps-content {
  margin-top: 16px;
  border: 1px dashed #e9e9e9;
  border-radius: 2px;
  // background-color: #ecf4ff;
  min-height: 200px;
  text-align: center;
  padding-top: 80px;
}

.ant-steps {
  display: block !important;
  text-align: center !important;
}

.steps_contailer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 1rem;
}

.ant-radio-group {
  display: flex !important;
  flex-direction: column !important;
}

.ant-radio-button-wrapper {
  padding: 1.5rem !important;
  margin-top: 1rem !important;
  font-size: 1rem;
  line-height: 1px !important;
  height: 100%;
  // display: inline-block;
  min-height: 550px;
  position: relative;
  transition-duration: $defaultDuration;
  transition-property: transform;

  @include hideTapHighlightColor();
  @include hardwareAccel();
  @include improveAntiAlias();

  &:hover {
    transform: translateY(-6px);
    animation-name: hover;
    animation-duration: 2.5s;
    animation-delay: $defaultDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    &:before {
      opacity: 0.4;
      transform: translateY(6px);
      animation-name: hover-shadow;
      animation-duration: 1.5s;
      animation-delay: 0.3s;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: alternate;
    }
  }
}
